""" LibXC compatible units

Helps with dispatching over different units to hartree units.
"""
module Units
using DocStringExtensions
using Unitful
using UnitfulHartree
using LibXC.DFTUnits: ùêû

"""
    $(SIGNATURES)

Convert to given units and Cdouble. This function is meant to simplify the process of
creating a valid array for LibXC.
"""
function conversion{Q <: Unitful.Quantity}(u::Unitful.Units, input::Array{Q})
    factor = uconvert(u, Q(1))
    result = similar(input,
                     Quantity{Cdouble, typeof(dimension(factor)), typeof(unit(factor))})
    copy!(ustrip(result), ustrip(input) * ustrip(factor))
    result
end

"""
$(SIGNATURES)

Assumes given units and converts to Cdouble. This function is meant to simplify the process
of creating a valid array for LibXC.
"""
function conversion{N <: Number}(u::Unitful.Units, input::Array{N})
    result = similar(input, typeof(one(Cdouble)u))
    copy!(ustrip(result), input)
    result
end

conversion{Q <: Unitful.Quantity}(::Type{Q}, input::Array) = conversion(unit(Q(1)), input)

macro _dim_helper(name, quant)
    q = eval(quant)
    dims = typeof(dimension(q))
    units = typeof(unit(q))
    esc(quote
        Unitful.Compat.@compat ($name){T} = Unitful.Quantity{T, $dims, $units}
        $name(val::Number) = $name{typeof(val)}(val)
        Unitful.unit(::Type{$name}) = $units()
        end)
end

@_dim_helper œÅ         ùêû*1u"a‚ÇÄ^-3"
@_dim_helper œÉ         ùêû*1u"a‚ÇÄ^-4"
@_dim_helper œµ         1u"E‚Çï"/ùêû
@_dim_helper ‚àÇœµ_‚àÇœÅ     ùêû^-2*1u"E‚Çï*a‚ÇÄ^3"
@_dim_helper ‚àÇœµ_‚àÇœÉ     ùêû^-2*1u"E‚Çï*a‚ÇÄ^4"
@_dim_helper ‚àÇ¬≤œµ_‚àÇœÅ¬≤   ùêû^-3*1u"E‚Çï*a‚ÇÄ^6"
@_dim_helper ‚àÇ¬≤œµ_‚àÇœÉ¬≤   ùêû^-3*1u"E‚Çï*a‚ÇÄ^8"
@_dim_helper ‚àÇ¬≤œµ_‚àÇœÅ‚àÇœÉ  ùêû^-3*1u"E‚Çï*a‚ÇÄ^7"
@_dim_helper ‚àÇ¬≥œµ_‚àÇœÅ¬≥   ùêû^-4*1u"E‚Çï*a‚ÇÄ^9"
@_dim_helper ‚àÇ¬≥œµ_‚àÇœÉ¬≥   ùêû^-4*1u"E‚Çï*a‚ÇÄ^12"
@_dim_helper ‚àÇ¬≥œµ_‚àÇœÅ¬≤‚àÇœÉ ùêû^-4*1u"E‚Çï*a‚ÇÄ^10"
@_dim_helper ‚àÇ¬≥œµ_‚àÇœÅ‚àÇœÉ¬≤ ùêû^-4*1u"E‚Çï*a‚ÇÄ^11"

end
